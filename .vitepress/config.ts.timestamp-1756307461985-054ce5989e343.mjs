// .vitepress/config.ts
import process from "node:process";
import { defineConfig } from "file:///home/yuki/snap/stack/notehub/node_modules/.pnpm/vitepress@1.1.4_@algolia+client-search@4.23.3_@types+node@20.12.11_less@4.2.0_markdown-_5ea4e70c9a5c08d1b89570d33df75a2a/node_modules/vitepress/dist/node/index.js";
import MarkdownItFootnote from "file:///home/yuki/snap/stack/notehub/node_modules/.pnpm/markdown-it-footnote@3.0.3/node_modules/markdown-it-footnote/index.js";
import MarkdownItMathjax3 from "file:///home/yuki/snap/stack/notehub/node_modules/.pnpm/markdown-it-mathjax3@4.3.2/node_modules/markdown-it-mathjax3/index.js";
import { BiDirectionalLinks } from "file:///home/yuki/snap/stack/notehub/node_modules/.pnpm/@nolebase+markdown-it-bi-directional-links@2.0.0-rc11_markdown-it@13.0.2/node_modules/@nolebase/markdown-it-bi-directional-links/dist/index.mjs";
import { InlineLinkPreviewElementTransform } from "file:///home/yuki/snap/stack/notehub/node_modules/.pnpm/@nolebase+vitepress-plugin-inline-link-preview@2.0.0-rc11_vitepress@1.1.4_@algolia+clie_c0887a828cc03c8aa820e5732e8d96bf/node_modules/@nolebase/vitepress-plugin-inline-link-preview/dist/markdown-it/index.mjs";
import { buildEndGenerateOpenGraphImages } from "file:///home/yuki/snap/stack/notehub/node_modules/.pnpm/@nolebase+vitepress-plugin-og-image@2.0.0-rc11_vitepress@1.1.4_@algolia+client-search@4_b54da5603bfa940dcc8122ef8b8fa234/node_modules/@nolebase/vitepress-plugin-og-image/dist/vitepress/index.mjs";
import { UnlazyImages } from "file:///home/yuki/snap/stack/notehub/node_modules/.pnpm/@nolebase+markdown-it-unlazy-img@2.0.0-rc11_@types+node@20.12.11_less@4.2.0_markdown-it@13.0.2/node_modules/@nolebase/markdown-it-unlazy-img/dist/index.mjs";

// metadata/index.ts
var siteName = "BoHao Chen";
var siteDescription = "AGI Researcher & Kaggle Expert";
var githubRepoLink = "https://github.com/TorrentBrave";
var discordLink = "https://discord.gg/XuNFDcDZGj";
var plainTargetDomain = "nolebase.ayaka.io";
var targetDomain = `https://${plainTargetDomain}`;

// .vitepress/creators.ts
var getAvatarUrl = (name) => `https://github.com/${name}.png`;
var creators = [
  {
    name: "BoHao Chen",
    avatar: "",
    username: "TorrentBrave",
    title: "AGI Researcher & Kaggle Expert",
    desc: "\u5F00\u53D1\u8005\uFF0C\u4E13\u6CE8\u4E8E\u57FA\u7840\u8BBE\u65BD\u7EF4\u62A4\uFF0C\u6570\u636E\u5206\u6790\uFF0C\u540E\u7AEF\u3001DevOps \u5F00\u53D1",
    links: [
      { type: "github", icon: "github", link: "https://github.com/TorrentBrave" },
      { type: "twitter", icon: "twitter", link: "https://twitter.com/ayakaneko" }
    ],
    nameAliases: ["nekomeowww", "\u7EDA\u9999\u732B", "\u7D62\u9999\u732B", "Neko Ayaka", "Ayaka Neko"],
    emailAliases: ["neko@ayaka.moe"]
  },
  {
    name: "\u7D62\u9999\u97F3",
    avatar: "",
    username: "LittleSound",
    title: "BoHao Chen \u539F\u59CB\u521B\u4F5C\u8005",
    desc: "\u5F00\u6E90\u5F00\u53D1\u8005\uFF0C\u4E13\u6CE8\u4E8E\u524D\u7AEF\uFF0C\u4EE5\u53CA\u524D\u7AEF\u76F8\u5173\u5DE5\u5177\u5E93\u548C\u5DE5\u5177\u94FE\u5F00\u53D1",
    links: [
      { type: "github", icon: "github", link: "https://github.com/LittleSound" },
      { type: "twitter", icon: "twitter", link: "https://twitter.com/OikawaRizumu" }
    ],
    nameAliases: ["LittleSound", "\u7EDA\u9999\u97F3", "\u7D62\u9999\u97F3", "Rizumu Oikawa", "Rizumu Ayaka", "Ayaka Rizumu", "Rizumu"],
    emailAliases: ["rizumu@ayaka.moe", "rizumu@oqo.moe"]
  }
].map((c) => {
  c.avatar = c.avatar || getAvatarUrl(c.username);
  return c;
});
var creatorNames = creators.map((c) => c.name);
var creatorUsernames = creators.map((c) => c.username || "");

// .vitepress/docsMetadata.json
var sidebar = [
  {
    index: "\u270D\uFE0F \u6587\u6863\u5DE5\u7A0B",
    text: "\u270D\uFE0F \u6587\u6863\u5DE5\u7A0B",
    collapsed: true,
    items: [
      {
        index: "API \u6587\u6863\u7CFB\u7EDF",
        text: "API \u6587\u6863\u7CFB\u7EDF",
        link: "/\u7B14\u8BB0/\u270D\uFE0F \u6587\u6863\u5DE5\u7A0B/API \u6587\u6863\u7CFB\u7EDF",
        lastUpdated: 1756255446e3
      },
      {
        index: "\u56FE\u8868\u5373\u4EE3\u7801\uFF08CaC\uFF09\u56FE\u8868\u7ED8\u5236",
        text: "\u56FE\u8868\u5373\u4EE3\u7801\uFF08CaC\uFF09\u56FE\u8868\u7ED8\u5236",
        link: "/\u7B14\u8BB0/\u270D\uFE0F \u6587\u6863\u5DE5\u7A0B/\u56FE\u8868\u5373\u4EE3\u7801\uFF08CaC\uFF09\u56FE\u8868\u7ED8\u5236",
        lastUpdated: 1756255446e3
      }
    ]
  },
  {
    index: "\u6F14\u793A\u76EE\u5F551",
    text: "\u6F14\u793A\u76EE\u5F551",
    collapsed: true,
    items: [
      {
        index: "\u6587\u6863-\u4E0D\u5E26\u8BC4\u8BBA",
        text: "\u6587\u6863-\u4E0D\u5E26\u8BC4\u8BBA",
        link: "/\u7B14\u8BB0/\u6F14\u793A\u76EE\u5F551/\u6587\u6863-\u4E0D\u5E26\u8BC4\u8BBA",
        lastUpdated: 1756255446e3
      },
      {
        index: "\u6587\u6863-\u5E26\u8BC4\u8BBA",
        text: "\u6587\u6863-\u5E26\u8BC4\u8BBA",
        link: "/\u7B14\u8BB0/\u6F14\u793A\u76EE\u5F551/\u6587\u6863-\u5E26\u8BC4\u8BBA",
        lastUpdated: 1756255446e3
      }
    ]
  }
];

// .vitepress/config.ts
var config_default = defineConfig({
  vue: {
    template: {
      transformAssetUrls: {
        video: ["src", "poster"],
        source: ["src"],
        img: ["src"],
        image: ["xlink:href", "href"],
        use: ["xlink:href", "href"],
        NolebaseUnlazyImg: ["src"]
      }
    }
  },
  lang: "zh-CN",
  title: siteName,
  description: siteDescription,
  ignoreDeadLinks: true,
  head: [
    ["meta", {
      name: "theme-color",
      content: "#ffffff"
    }],
    [
      "link",
      {
        rel: "apple-touch-icon",
        href: "/apple-touch-icon.png",
        sizes: "180x180"
      }
    ],
    ["link", {
      rel: "icon",
      href: "/logo.svg",
      type: "image/svg+xml"
    }],
    [
      "link",
      {
        rel: "alternate icon",
        href: "/favicon.ico",
        type: "image/png",
        sizes: "16x16"
      }
    ],
    ["meta", {
      name: "author",
      content: creatorNames.join(", ")
    }],
    [
      "meta",
      {
        name: "keywords",
        content: ["markdown", "knowledge-base", "\u77E5\u8BC6\u5E93", "vitepress", "obsidian", "notebook", "notes", ...creatorUsernames].join(", ")
      }
    ],
    ["meta", {
      property: "og:title",
      content: siteName
    }],
    [
      "meta",
      {
        property: "og:image",
        content: `${targetDomain}/og.png`
      }
    ],
    ["meta", {
      property: "og:description",
      content: siteDescription
    }],
    ["meta", {
      property: "og:site_name",
      content: siteName
    }],
    ["meta", {
      name: "twitter:card",
      content: "summary_large_image"
    }],
    ["meta", {
      name: "twitter:creator",
      content: creatorUsernames.join(", ")
    }],
    [
      "meta",
      {
        name: "twitter:image",
        content: `${targetDomain}/og.png`
      }
    ],
    [
      "link",
      {
        rel: "mask-icon",
        href: "/safari-pinned-tab.svg",
        color: "#927baf"
      }
    ],
    ["link", {
      rel: "manifest",
      href: "/site.webmanifest"
    }],
    ["meta", {
      name: "msapplication-TileColor",
      content: "#603cba"
    }],
    // Proxying Plausible through Netlify | Plausible docs
    // https://plausible.io/docs/proxy/guides/netlify
    ["script", { "defer": "true", "data-domain": "nolebase.ayaka.io", "data-api": "/api/v1/page-external-data/submit", "src": "/assets/page-external-data/js/script.js" }]
  ],
  themeConfig: {
    outline: { label: "\u9875\u9762\u5927\u7EB2", level: "deep" },
    darkModeSwitchLabel: "\u5207\u6362\u4E3B\u9898",
    editLink: {
      pattern: `${githubRepoLink}/tree/main/:path`,
      text: "\u7F16\u8F91\u672C\u9875\u9762"
    },
    socialLinks: [
      { icon: "github", link: githubRepoLink },
      { icon: "discord", link: discordLink }
    ],
    footer: {
      message: '\u7528 <span style="color: #e25555;">&#9829;</span> \u64B0\u5199',
      copyright: '<a class="footer-cc-link" target="_blank" href="https://creativecommons.org/licenses/by-sa/4.0/">CC BY-SA 4.0</a> \xA9 2025-PRESENT BoHao Chen'
    },
    search: {
      provider: "local",
      options: {
        locales: {
          root: {
            translations: {
              button: {
                buttonText: "\u641C\u7D22\u6587\u6863",
                buttonAriaLabel: "\u641C\u7D22\u6587\u6863"
              },
              modal: {
                noResultsText: "\u65E0\u6CD5\u627E\u5230\u76F8\u5173\u7ED3\u679C",
                resetButtonTitle: "\u6E05\u9664\u67E5\u8BE2\u6761\u4EF6",
                footer: {
                  selectText: "\u9009\u62E9",
                  navigateText: "\u5207\u6362"
                }
              }
            }
          }
        },
        // Add title ang tags field in frontmatter to search
        // You can exclude a page from search by adding search: false to the page's frontmatter.
        _render(src, env, md) {
          let html = md.render(src, env);
          let tagsPart = "";
          let headingPart = "";
          let contentPart = "";
          let fullContent = "";
          const sortContent = () => [headingPart, tagsPart, contentPart];
          let { frontmatter, content } = env;
          if (!frontmatter)
            return html;
          if (frontmatter.search === false)
            return "";
          contentPart = content ||= src;
          const headingMatch = content.match(/^#{1} .*/m);
          const hasHeading = !!(headingMatch && headingMatch[0] && headingMatch.index !== void 0);
          if (hasHeading) {
            const headingEnd = headingMatch.index + headingMatch[0].length;
            headingPart = content.slice(0, headingEnd);
            contentPart = content.slice(headingEnd);
          } else if (frontmatter.title) {
            headingPart = `# ${frontmatter.title}`;
          }
          const tags = frontmatter.tags;
          if (tags && Array.isArray(tags) && tags.length)
            tagsPart = `Tags: #${tags.join(", #")}`;
          fullContent = sortContent().filter(Boolean).join("\n\n");
          html = md.render(fullContent, env);
          return html;
        }
      }
    },
    nav: [
      { text: "\u4E3B\u9875", link: "/" },
      { text: "\u7B14\u8BB0", link: "/\u7B14\u8BB0/" },
      { text: "\u6700\u8FD1\u66F4\u65B0", link: "/toc" }
    ],
    sidebar
  },
  markdown: {
    theme: {
      light: "github-light",
      dark: "one-dark-pro"
    },
    math: true,
    config: (md) => {
      md.use(MarkdownItFootnote);
      md.use(MarkdownItMathjax3);
      md.use(BiDirectionalLinks({
        dir: process.cwd()
      }));
      md.use(UnlazyImages(), {
        imgElementTag: "NolebaseUnlazyImg"
      });
      md.use(InlineLinkPreviewElementTransform, {
        tag: "VPNolebaseInlineLinkPreview"
      });
    }
  },
  async buildEnd(siteConfig) {
    await buildEndGenerateOpenGraphImages({
      baseUrl: targetDomain,
      category: {
        byLevel: 2
      }
    })(siteConfig);
  }
});
export {
  config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLnZpdGVwcmVzcy9jb25maWcudHMiLCAibWV0YWRhdGEvaW5kZXgudHMiLCAiLnZpdGVwcmVzcy9jcmVhdG9ycy50cyIsICIudml0ZXByZXNzL2RvY3NNZXRhZGF0YS5qc29uIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZGlybmFtZSA9IFwiL2hvbWUveXVraS9zbmFwL3N0YWNrL25vdGVodWIvLnZpdGVwcmVzc1wiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9maWxlbmFtZSA9IFwiL2hvbWUveXVraS9zbmFwL3N0YWNrL25vdGVodWIvLnZpdGVwcmVzcy9jb25maWcudHNcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfaW1wb3J0X21ldGFfdXJsID0gXCJmaWxlOi8vL2hvbWUveXVraS9zbmFwL3N0YWNrL25vdGVodWIvLnZpdGVwcmVzcy9jb25maWcudHNcIjtpbXBvcnQgcHJvY2VzcyBmcm9tICdub2RlOnByb2Nlc3MnXG5pbXBvcnQgeyBkZWZpbmVDb25maWcgfSBmcm9tICd2aXRlcHJlc3MnXG5pbXBvcnQgTWFya2Rvd25JdEZvb3Rub3RlIGZyb20gJ21hcmtkb3duLWl0LWZvb3Rub3RlJ1xuaW1wb3J0IE1hcmtkb3duSXRNYXRoamF4MyBmcm9tICdtYXJrZG93bi1pdC1tYXRoamF4MydcblxuaW1wb3J0IHsgQmlEaXJlY3Rpb25hbExpbmtzIH0gZnJvbSAnQG5vbGViYXNlL21hcmtkb3duLWl0LWJpLWRpcmVjdGlvbmFsLWxpbmtzJ1xuaW1wb3J0IHsgSW5saW5lTGlua1ByZXZpZXdFbGVtZW50VHJhbnNmb3JtIH0gZnJvbSAnQG5vbGViYXNlL3ZpdGVwcmVzcy1wbHVnaW4taW5saW5lLWxpbmstcHJldmlldy9tYXJrZG93bi1pdCdcbmltcG9ydCB7IGJ1aWxkRW5kR2VuZXJhdGVPcGVuR3JhcGhJbWFnZXMgfSBmcm9tICdAbm9sZWJhc2Uvdml0ZXByZXNzLXBsdWdpbi1vZy1pbWFnZS92aXRlcHJlc3MnXG5pbXBvcnQgeyBVbmxhenlJbWFnZXMgfSBmcm9tICdAbm9sZWJhc2UvbWFya2Rvd24taXQtdW5sYXp5LWltZydcblxuaW1wb3J0IHsgZGlzY29yZExpbmssIGdpdGh1YlJlcG9MaW5rLCBzaXRlRGVzY3JpcHRpb24sIHNpdGVOYW1lLCB0YXJnZXREb21haW4gfSBmcm9tICcuLi9tZXRhZGF0YSdcbmltcG9ydCB7IGNyZWF0b3JOYW1lcywgY3JlYXRvclVzZXJuYW1lcyB9IGZyb20gJy4vY3JlYXRvcnMnXG5pbXBvcnQgeyBzaWRlYmFyIH0gZnJvbSAnLi9kb2NzTWV0YWRhdGEuanNvbidcblxuZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29uZmlnKHtcbiAgdnVlOiB7XG4gICAgdGVtcGxhdGU6IHtcbiAgICAgIHRyYW5zZm9ybUFzc2V0VXJsczoge1xuICAgICAgICB2aWRlbzogWydzcmMnLCAncG9zdGVyJ10sXG4gICAgICAgIHNvdXJjZTogWydzcmMnXSxcbiAgICAgICAgaW1nOiBbJ3NyYyddLFxuICAgICAgICBpbWFnZTogWyd4bGluazpocmVmJywgJ2hyZWYnXSxcbiAgICAgICAgdXNlOiBbJ3hsaW5rOmhyZWYnLCAnaHJlZiddLFxuICAgICAgICBOb2xlYmFzZVVubGF6eUltZzogWydzcmMnXSxcbiAgICAgIH0sXG4gICAgfSxcbiAgfSxcbiAgbGFuZzogJ3poLUNOJyxcbiAgdGl0bGU6IHNpdGVOYW1lLFxuICBkZXNjcmlwdGlvbjogc2l0ZURlc2NyaXB0aW9uLFxuICBpZ25vcmVEZWFkTGlua3M6IHRydWUsXG4gIGhlYWQ6IFtcbiAgICBbJ21ldGEnLCB7XG4gICAgICBuYW1lOiAndGhlbWUtY29sb3InLFxuICAgICAgY29udGVudDogJyNmZmZmZmYnLFxuICAgIH1dLFxuICAgIFtcbiAgICAgICdsaW5rJyxcbiAgICAgIHtcbiAgICAgICAgcmVsOiAnYXBwbGUtdG91Y2gtaWNvbicsXG4gICAgICAgIGhyZWY6ICcvYXBwbGUtdG91Y2gtaWNvbi5wbmcnLFxuICAgICAgICBzaXplczogJzE4MHgxODAnLFxuICAgICAgfSxcbiAgICBdLFxuICAgIFsnbGluaycsIHtcbiAgICAgIHJlbDogJ2ljb24nLFxuICAgICAgaHJlZjogJy9sb2dvLnN2ZycsXG4gICAgICB0eXBlOiAnaW1hZ2Uvc3ZnK3htbCcsXG4gICAgfV0sXG4gICAgW1xuICAgICAgJ2xpbmsnLFxuICAgICAge1xuICAgICAgICByZWw6ICdhbHRlcm5hdGUgaWNvbicsXG4gICAgICAgIGhyZWY6ICcvZmF2aWNvbi5pY28nLFxuICAgICAgICB0eXBlOiAnaW1hZ2UvcG5nJyxcbiAgICAgICAgc2l6ZXM6ICcxNngxNicsXG4gICAgICB9LFxuICAgIF0sXG4gICAgWydtZXRhJywge1xuICAgICAgbmFtZTogJ2F1dGhvcicsXG4gICAgICBjb250ZW50OiBjcmVhdG9yTmFtZXMuam9pbignLCAnKSxcbiAgICB9XSxcbiAgICBbXG4gICAgICAnbWV0YScsXG4gICAgICB7XG4gICAgICAgIG5hbWU6ICdrZXl3b3JkcycsXG4gICAgICAgIGNvbnRlbnQ6XG4gICAgICAgICAgWydtYXJrZG93bicsICdrbm93bGVkZ2UtYmFzZScsICdcdTc3RTVcdThCQzZcdTVFOTMnLCAndml0ZXByZXNzJywgJ29ic2lkaWFuJywgJ25vdGVib29rJywgJ25vdGVzJywgLi4uY3JlYXRvclVzZXJuYW1lc10uam9pbignLCAnKSxcbiAgICAgIH0sXG4gICAgXSxcblxuICAgIFsnbWV0YScsIHtcbiAgICAgIHByb3BlcnR5OiAnb2c6dGl0bGUnLFxuICAgICAgY29udGVudDogc2l0ZU5hbWUsXG4gICAgfV0sXG4gICAgW1xuICAgICAgJ21ldGEnLFxuICAgICAge1xuICAgICAgICBwcm9wZXJ0eTogJ29nOmltYWdlJyxcbiAgICAgICAgY29udGVudDogYCR7dGFyZ2V0RG9tYWlufS9vZy5wbmdgLFxuICAgICAgfSxcbiAgICBdLFxuICAgIFsnbWV0YScsIHtcbiAgICAgIHByb3BlcnR5OiAnb2c6ZGVzY3JpcHRpb24nLFxuICAgICAgY29udGVudDogc2l0ZURlc2NyaXB0aW9uLFxuICAgIH1dLFxuICAgIFsnbWV0YScsIHtcbiAgICAgIHByb3BlcnR5OiAnb2c6c2l0ZV9uYW1lJyxcbiAgICAgIGNvbnRlbnQ6IHNpdGVOYW1lLFxuICAgIH1dLFxuXG4gICAgWydtZXRhJywge1xuICAgICAgbmFtZTogJ3R3aXR0ZXI6Y2FyZCcsXG4gICAgICBjb250ZW50OiAnc3VtbWFyeV9sYXJnZV9pbWFnZScsXG4gICAgfV0sXG4gICAgWydtZXRhJywge1xuICAgICAgbmFtZTogJ3R3aXR0ZXI6Y3JlYXRvcicsXG4gICAgICBjb250ZW50OiBjcmVhdG9yVXNlcm5hbWVzLmpvaW4oJywgJyksXG4gICAgfV0sXG4gICAgW1xuICAgICAgJ21ldGEnLFxuICAgICAge1xuICAgICAgICBuYW1lOiAndHdpdHRlcjppbWFnZScsXG4gICAgICAgIGNvbnRlbnQ6IGAke3RhcmdldERvbWFpbn0vb2cucG5nYCxcbiAgICAgIH0sXG4gICAgXSxcblxuICAgIFtcbiAgICAgICdsaW5rJyxcbiAgICAgIHtcbiAgICAgICAgcmVsOiAnbWFzay1pY29uJyxcbiAgICAgICAgaHJlZjogJy9zYWZhcmktcGlubmVkLXRhYi5zdmcnLFxuICAgICAgICBjb2xvcjogJyM5MjdiYWYnLFxuICAgICAgfSxcbiAgICBdLFxuICAgIFsnbGluaycsIHtcbiAgICAgIHJlbDogJ21hbmlmZXN0JyxcbiAgICAgIGhyZWY6ICcvc2l0ZS53ZWJtYW5pZmVzdCcsXG4gICAgfV0sXG4gICAgWydtZXRhJywge1xuICAgICAgbmFtZTogJ21zYXBwbGljYXRpb24tVGlsZUNvbG9yJyxcbiAgICAgIGNvbnRlbnQ6ICcjNjAzY2JhJyxcbiAgICB9XSxcbiAgICAvLyBQcm94eWluZyBQbGF1c2libGUgdGhyb3VnaCBOZXRsaWZ5IHwgUGxhdXNpYmxlIGRvY3NcbiAgICAvLyBodHRwczovL3BsYXVzaWJsZS5pby9kb2NzL3Byb3h5L2d1aWRlcy9uZXRsaWZ5XG4gICAgWydzY3JpcHQnLCB7ICdkZWZlcic6ICd0cnVlJywgJ2RhdGEtZG9tYWluJzogJ25vbGViYXNlLmF5YWthLmlvJywgJ2RhdGEtYXBpJzogJy9hcGkvdjEvcGFnZS1leHRlcm5hbC1kYXRhL3N1Ym1pdCcsICdzcmMnOiAnL2Fzc2V0cy9wYWdlLWV4dGVybmFsLWRhdGEvanMvc2NyaXB0LmpzJyB9XSxcbiAgXSxcbiAgdGhlbWVDb25maWc6IHtcbiAgICBvdXRsaW5lOiB7IGxhYmVsOiAnXHU5ODc1XHU5NzYyXHU1OTI3XHU3RUIyJywgbGV2ZWw6ICdkZWVwJyB9LFxuICAgIGRhcmtNb2RlU3dpdGNoTGFiZWw6ICdcdTUyMDdcdTYzNjJcdTRFM0JcdTk4OTgnLFxuICAgIGVkaXRMaW5rOiB7XG4gICAgICBwYXR0ZXJuOiBgJHtnaXRodWJSZXBvTGlua30vdHJlZS9tYWluLzpwYXRoYCxcbiAgICAgIHRleHQ6ICdcdTdGMTZcdThGOTFcdTY3MkNcdTk4NzVcdTk3NjInLFxuICAgIH0sXG4gICAgc29jaWFsTGlua3M6IFtcbiAgICAgIHsgaWNvbjogJ2dpdGh1YicsIGxpbms6IGdpdGh1YlJlcG9MaW5rIH0sXG4gICAgICB7IGljb246ICdkaXNjb3JkJywgbGluazogZGlzY29yZExpbmsgfSxcbiAgICBdLFxuICAgIGZvb3Rlcjoge1xuICAgICAgbWVzc2FnZTogJ1x1NzUyOCA8c3BhbiBzdHlsZT1cImNvbG9yOiAjZTI1NTU1O1wiPiYjOTgyOTs8L3NwYW4+IFx1NjRCMFx1NTE5OScsXG4gICAgICBjb3B5cmlnaHQ6XG4gICAgICAgICc8YSBjbGFzcz1cImZvb3Rlci1jYy1saW5rXCIgdGFyZ2V0PVwiX2JsYW5rXCIgaHJlZj1cImh0dHBzOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1zYS80LjAvXCI+Q0MgQlktU0EgNC4wPC9hPiBcdTAwQTkgMjAyNS1QUkVTRU5UIEJvSGFvIENoZW4nLFxuICAgIH0sXG4gICAgc2VhcmNoOiB7XG4gICAgICBwcm92aWRlcjogJ2xvY2FsJyxcbiAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgbG9jYWxlczoge1xuICAgICAgICAgIHJvb3Q6IHtcbiAgICAgICAgICAgIHRyYW5zbGF0aW9uczoge1xuICAgICAgICAgICAgICBidXR0b246IHtcbiAgICAgICAgICAgICAgICBidXR0b25UZXh0OiAnXHU2NDFDXHU3RDIyXHU2NTg3XHU2ODYzJyxcbiAgICAgICAgICAgICAgICBidXR0b25BcmlhTGFiZWw6ICdcdTY0MUNcdTdEMjJcdTY1ODdcdTY4NjMnLFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBtb2RhbDoge1xuICAgICAgICAgICAgICAgIG5vUmVzdWx0c1RleHQ6ICdcdTY1RTBcdTZDRDVcdTYyN0VcdTUyMzBcdTc2RjhcdTUxNzNcdTdFRDNcdTY3OUMnLFxuICAgICAgICAgICAgICAgIHJlc2V0QnV0dG9uVGl0bGU6ICdcdTZFMDVcdTk2NjRcdTY3RTVcdThCRTJcdTY3NjFcdTRFRjYnLFxuICAgICAgICAgICAgICAgIGZvb3Rlcjoge1xuICAgICAgICAgICAgICAgICAgc2VsZWN0VGV4dDogJ1x1OTAwOVx1NjJFOScsXG4gICAgICAgICAgICAgICAgICBuYXZpZ2F0ZVRleHQ6ICdcdTUyMDdcdTYzNjInLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH0sXG4gICAgICAgIH0sXG5cbiAgICAgICAgLy8gQWRkIHRpdGxlIGFuZyB0YWdzIGZpZWxkIGluIGZyb250bWF0dGVyIHRvIHNlYXJjaFxuICAgICAgICAvLyBZb3UgY2FuIGV4Y2x1ZGUgYSBwYWdlIGZyb20gc2VhcmNoIGJ5IGFkZGluZyBzZWFyY2g6IGZhbHNlIHRvIHRoZSBwYWdlJ3MgZnJvbnRtYXR0ZXIuXG4gICAgICBfcmVuZGVyKHNyYywgZW52LCBtZCkge1xuICAgICAgICAgIC8vIHdpdGhvdXQgYG1kLnJlbmRlcihzcmMsIGVudilgLCB0aGUgc29tZSBpbmZvcm1hdGlvbiB3aWxsIGJlIG1pc3NpbmcgZnJvbSB0aGUgZW52LlxuICAgICAgICAgIGxldCBodG1sID0gbWQucmVuZGVyKHNyYywgZW52KVxuICAgICAgICAgIGxldCB0YWdzUGFydCA9ICcnXG4gICAgICAgICAgbGV0IGhlYWRpbmdQYXJ0ID0gJydcbiAgICAgICAgICBsZXQgY29udGVudFBhcnQgPSAnJ1xuICAgICAgICAgIGxldCBmdWxsQ29udGVudCA9ICcnXG4gICAgICAgICAgY29uc3Qgc29ydENvbnRlbnQgPSAoKSA9PiBbaGVhZGluZ1BhcnQsIHRhZ3NQYXJ0LCBjb250ZW50UGFydF0gYXMgY29uc3RcbiAgICAgICAgICBsZXQgeyBmcm9udG1hdHRlciwgY29udGVudCB9ID0gZW52XG5cbiAgICAgICAgICBpZiAoIWZyb250bWF0dGVyKVxuICAgICAgICAgICAgcmV0dXJuIGh0bWxcblxuICAgICAgICAgIGlmIChmcm9udG1hdHRlci5zZWFyY2ggPT09IGZhbHNlKVxuICAgICAgICAgICAgcmV0dXJuICcnXG5cbiAgICAgICAgICBjb250ZW50UGFydCA9IGNvbnRlbnQgfHw9IHNyY1xuXG4gICAgICAgICAgY29uc3QgaGVhZGluZ01hdGNoID0gY29udGVudC5tYXRjaCgvXiN7MX0gLiovbSlcbiAgICAgICAgICBjb25zdCBoYXNIZWFkaW5nID0gISEoaGVhZGluZ01hdGNoICYmIGhlYWRpbmdNYXRjaFswXSAmJiBoZWFkaW5nTWF0Y2guaW5kZXggIT09IHVuZGVmaW5lZClcblxuICAgICAgICAgIGlmIChoYXNIZWFkaW5nKSB7XG4gICAgICAgICAgICBjb25zdCBoZWFkaW5nRW5kID0gaGVhZGluZ01hdGNoLmluZGV4ISArIGhlYWRpbmdNYXRjaFswXS5sZW5ndGhcbiAgICAgICAgICAgIGhlYWRpbmdQYXJ0ID0gY29udGVudC5zbGljZSgwLCBoZWFkaW5nRW5kKVxuICAgICAgICAgICAgY29udGVudFBhcnQgPSBjb250ZW50LnNsaWNlKGhlYWRpbmdFbmQpXG4gICAgICAgICAgfVxuICAgICAgICAgIGVsc2UgaWYgKGZyb250bWF0dGVyLnRpdGxlKSB7XG4gICAgICAgICAgICBoZWFkaW5nUGFydCA9IGAjICR7ZnJvbnRtYXR0ZXIudGl0bGV9YFxuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnN0IHRhZ3MgPSBmcm9udG1hdHRlci50YWdzXG4gICAgICAgICAgaWYgKHRhZ3MgJiYgQXJyYXkuaXNBcnJheSh0YWdzKSAmJiB0YWdzLmxlbmd0aClcbiAgICAgICAgICAgIHRhZ3NQYXJ0ID0gYFRhZ3M6ICMke3RhZ3Muam9pbignLCAjJyl9YFxuXG4gICAgICAgICAgZnVsbENvbnRlbnQgPSBzb3J0Q29udGVudCgpLmZpbHRlcihCb29sZWFuKS5qb2luKCdcXG5cXG4nKVxuXG4gICAgICAgICAgaHRtbCA9IG1kLnJlbmRlcihmdWxsQ29udGVudCwgZW52KVxuXG4gICAgICAgICAgcmV0dXJuIGh0bWxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBuYXY6IFtcbiAgICAgIHsgdGV4dDogJ1x1NEUzQlx1OTg3NScsIGxpbms6ICcvJyB9LFxuICAgICAgeyB0ZXh0OiAnXHU3QjE0XHU4QkIwJywgbGluazogJy9cdTdCMTRcdThCQjAvJyB9LFxuICAgICAgeyB0ZXh0OiAnXHU2NzAwXHU4RkQxXHU2NkY0XHU2NUIwJywgbGluazogJy90b2MnIH0sXG4gICAgXSxcbiAgICBzaWRlYmFyLFxuICB9LFxuICBtYXJrZG93bjoge1xuICAgIHRoZW1lOiB7XG4gICAgICBsaWdodDogJ2dpdGh1Yi1saWdodCcsXG4gICAgICBkYXJrOiAnb25lLWRhcmstcHJvJyxcbiAgICB9LFxuICAgIG1hdGg6IHRydWUsXG4gIGNvbmZpZzogKG1kOiBhbnkpID0+IHtcbiAgICAgIG1kLnVzZShNYXJrZG93bkl0Rm9vdG5vdGUpXG4gICAgICBtZC51c2UoTWFya2Rvd25JdE1hdGhqYXgzKVxuICAgICAgbWQudXNlKEJpRGlyZWN0aW9uYWxMaW5rcyh7XG4gICAgICAgIGRpcjogcHJvY2Vzcy5jd2QoKSxcbiAgICAgIH0pKVxuICAgICAgbWQudXNlKFVubGF6eUltYWdlcygpLCB7XG4gICAgICAgIGltZ0VsZW1lbnRUYWc6ICdOb2xlYmFzZVVubGF6eUltZycsXG4gICAgICB9KVxuICAgICAgbWQudXNlKElubGluZUxpbmtQcmV2aWV3RWxlbWVudFRyYW5zZm9ybSwge1xuICAgICAgICB0YWc6ICdWUE5vbGViYXNlSW5saW5lTGlua1ByZXZpZXcnLFxuICAgICAgfSlcbiAgICB9LFxuICB9LFxuICBhc3luYyBidWlsZEVuZChzaXRlQ29uZmlnKSB7XG4gICAgYXdhaXQgYnVpbGRFbmRHZW5lcmF0ZU9wZW5HcmFwaEltYWdlcyh7XG4gICAgICBiYXNlVXJsOiB0YXJnZXREb21haW4sXG4gICAgICBjYXRlZ29yeToge1xuICAgICAgICBieUxldmVsOiAyLFxuICAgICAgfSxcbiAgICB9KShzaXRlQ29uZmlnKVxuICB9LFxufSlcbiIsICJjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZGlybmFtZSA9IFwiL2hvbWUveXVraS9zbmFwL3N0YWNrL25vdGVodWIvbWV0YWRhdGFcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZmlsZW5hbWUgPSBcIi9ob21lL3l1a2kvc25hcC9zdGFjay9ub3RlaHViL21ldGFkYXRhL2luZGV4LnRzXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ltcG9ydF9tZXRhX3VybCA9IFwiZmlsZTovLy9ob21lL3l1a2kvc25hcC9zdGFjay9ub3RlaHViL21ldGFkYXRhL2luZGV4LnRzXCI7LyoqIFx1NjU4N1x1NjcyQyAqL1xuLy8gZXhwb3J0IGNvbnN0IHNpdGVOYW1lID0gJ0JvSGFvIENoZW4nXG5leHBvcnQgY29uc3Qgc2l0ZU5hbWUgPSAnQm9IYW8gQ2hlbidcbi8vIGV4cG9ydCBjb25zdCBzaXRlU2hvcnROYW1lID0gJ0JvSGFvIENoZW4nXG5leHBvcnQgY29uc3Qgc2l0ZVNob3J0TmFtZSA9ICdCb0hhbyBDaGVuJ1xuZXhwb3J0IGNvbnN0IHNpdGVEZXNjcmlwdGlvbiA9ICdBR0kgUmVzZWFyY2hlciAmIEthZ2dsZSBFeHBlcnQnXG5cbi8qKiBcdTY1ODdcdTY4NjNcdTYyNDBcdTU3MjhcdTc2RUVcdTVGNTUgKi9cbmV4cG9ydCBjb25zdCBpbmNsdWRlID0gWydcdTdCMTRcdThCQjAnLCAnXHU3NTFGXHU2RDNCJ11cblxuLyoqIFJlcG8gKi9cbmV4cG9ydCBjb25zdCBnaXRodWJSZXBvTGluayA9ICdodHRwczovL2dpdGh1Yi5jb20vVG9ycmVudEJyYXZlJ1xuLyoqIERpc2NvcmQgKi9cbmV4cG9ydCBjb25zdCBkaXNjb3JkTGluayA9ICdodHRwczovL2Rpc2NvcmQuZ2cvWHVORkRjRFpHaidcblxuLyoqIFx1NjVFMFx1NTM0Rlx1OEJBRVx1NTI0RFx1N0YwMFx1NTdERlx1NTQwRCAqL1xuZXhwb3J0IGNvbnN0IHBsYWluVGFyZ2V0RG9tYWluID0gJ25vbGViYXNlLmF5YWthLmlvJ1xuLyoqIFx1NUI4Q1x1NjU3NFx1NTdERlx1NTQwRCAqL1xuZXhwb3J0IGNvbnN0IHRhcmdldERvbWFpbiA9IGBodHRwczovLyR7cGxhaW5UYXJnZXREb21haW59YFxuIiwgImNvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9kaXJuYW1lID0gXCIvaG9tZS95dWtpL3NuYXAvc3RhY2svbm90ZWh1Yi8udml0ZXByZXNzXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ZpbGVuYW1lID0gXCIvaG9tZS95dWtpL3NuYXAvc3RhY2svbm90ZWh1Yi8udml0ZXByZXNzL2NyZWF0b3JzLnRzXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ltcG9ydF9tZXRhX3VybCA9IFwiZmlsZTovLy9ob21lL3l1a2kvc25hcC9zdGFjay9ub3RlaHViLy52aXRlcHJlc3MvY3JlYXRvcnMudHNcIjtleHBvcnQgaW50ZXJmYWNlIFNvY2lhbEVudHJ5IHtcbiAgdHlwZTogJ2dpdGh1YicgfCAndHdpdHRlcicgfCAnZW1haWwnXG4gIGljb246IHN0cmluZ1xuICBsaW5rOiBzdHJpbmdcbn1cblxuZXhwb3J0IGludGVyZmFjZSBDcmVhdG9yIHtcbiAgYXZhdGFyOiBzdHJpbmdcbiAgbmFtZTogc3RyaW5nXG4gIHVzZXJuYW1lPzogc3RyaW5nXG4gIHRpdGxlPzogc3RyaW5nXG4gIG9yZz86IHN0cmluZ1xuICBkZXNjPzogc3RyaW5nXG4gIGxpbmtzPzogU29jaWFsRW50cnlbXVxuICBuYW1lQWxpYXNlcz86IHN0cmluZ1tdXG4gIGVtYWlsQWxpYXNlcz86IHN0cmluZ1tdXG59XG5cbmNvbnN0IGdldEF2YXRhclVybCA9IChuYW1lOiBzdHJpbmcpID0+IGBodHRwczovL2dpdGh1Yi5jb20vJHtuYW1lfS5wbmdgXG5cbmV4cG9ydCBjb25zdCBjcmVhdG9yczogQ3JlYXRvcltdID0gW1xuICB7XG4gICAgbmFtZTogJ0JvSGFvIENoZW4nLFxuICAgIGF2YXRhcjogJycsXG4gICAgdXNlcm5hbWU6ICdUb3JyZW50QnJhdmUnLFxuICAgIHRpdGxlOiAnQUdJIFJlc2VhcmNoZXIgJiBLYWdnbGUgRXhwZXJ0JyxcbiAgICBkZXNjOiAnXHU1RjAwXHU1M0QxXHU4MDA1XHVGRjBDXHU0RTEzXHU2Q0U4XHU0RThFXHU1N0ZBXHU3ODQwXHU4QkJFXHU2NUJEXHU3RUY0XHU2MkE0XHVGRjBDXHU2NTcwXHU2MzZFXHU1MjA2XHU2NzkwXHVGRjBDXHU1NDBFXHU3QUVGXHUzMDAxRGV2T3BzIFx1NUYwMFx1NTNEMScsXG4gICAgbGlua3M6IFtcbiAgICAgIHsgdHlwZTogJ2dpdGh1YicsIGljb246ICdnaXRodWInLCBsaW5rOiAnaHR0cHM6Ly9naXRodWIuY29tL1RvcnJlbnRCcmF2ZScgfSxcbiAgICAgIHsgdHlwZTogJ3R3aXR0ZXInLCBpY29uOiAndHdpdHRlcicsIGxpbms6ICdodHRwczovL3R3aXR0ZXIuY29tL2F5YWthbmVrbycgfSxcbiAgICBdLFxuICAgIG5hbWVBbGlhc2VzOiBbJ25la29tZW93d3cnLCAnXHU3RURBXHU5OTk5XHU3MzJCJywgJ1x1N0Q2Mlx1OTk5OVx1NzMyQicsICdOZWtvIEF5YWthJywgJ0F5YWthIE5la28nXSxcbiAgICBlbWFpbEFsaWFzZXM6IFsnbmVrb0BheWFrYS5tb2UnXSxcbiAgfSxcbiAge1xuICAgIG5hbWU6ICdcdTdENjJcdTk5OTlcdTk3RjMnLFxuICAgIGF2YXRhcjogJycsXG4gICAgdXNlcm5hbWU6ICdMaXR0bGVTb3VuZCcsXG4gICAgdGl0bGU6ICdCb0hhbyBDaGVuIFx1NTM5Rlx1NTlDQlx1NTIxQlx1NEY1Q1x1ODAwNScsXG4gICAgZGVzYzogJ1x1NUYwMFx1NkU5MFx1NUYwMFx1NTNEMVx1ODAwNVx1RkYwQ1x1NEUxM1x1NkNFOFx1NEU4RVx1NTI0RFx1N0FFRlx1RkYwQ1x1NEVFNVx1NTNDQVx1NTI0RFx1N0FFRlx1NzZGOFx1NTE3M1x1NURFNVx1NTE3N1x1NUU5M1x1NTQ4Q1x1NURFNVx1NTE3N1x1OTRGRVx1NUYwMFx1NTNEMScsXG4gICAgbGlua3M6IFtcbiAgICAgIHsgdHlwZTogJ2dpdGh1YicsIGljb246ICdnaXRodWInLCBsaW5rOiAnaHR0cHM6Ly9naXRodWIuY29tL0xpdHRsZVNvdW5kJyB9LFxuICAgICAgeyB0eXBlOiAndHdpdHRlcicsIGljb246ICd0d2l0dGVyJywgbGluazogJ2h0dHBzOi8vdHdpdHRlci5jb20vT2lrYXdhUml6dW11JyB9LFxuICAgIF0sXG4gICAgbmFtZUFsaWFzZXM6IFsnTGl0dGxlU291bmQnLCAnXHU3RURBXHU5OTk5XHU5N0YzJywgJ1x1N0Q2Mlx1OTk5OVx1OTdGMycsICdSaXp1bXUgT2lrYXdhJywgJ1JpenVtdSBBeWFrYScsICdBeWFrYSBSaXp1bXUnLCAnUml6dW11J10sXG4gICAgZW1haWxBbGlhc2VzOiBbJ3JpenVtdUBheWFrYS5tb2UnLCAncml6dW11QG9xby5tb2UnXSxcbiAgfSxcbl0ubWFwPENyZWF0b3I+KChjKSA9PiB7XG4gIGMuYXZhdGFyID0gYy5hdmF0YXIgfHwgZ2V0QXZhdGFyVXJsKGMudXNlcm5hbWUpXG4gIHJldHVybiBjIGFzIENyZWF0b3Jcbn0pXG5cbmV4cG9ydCBjb25zdCBjcmVhdG9yTmFtZXMgPSBjcmVhdG9ycy5tYXAoYyA9PiBjLm5hbWUpXG5leHBvcnQgY29uc3QgY3JlYXRvclVzZXJuYW1lcyA9IGNyZWF0b3JzLm1hcChjID0+IGMudXNlcm5hbWUgfHwgJycpXG4iLCAie1xuICBcImRvY3NcIjogW1xuICAgIHtcbiAgICAgIFwicmVsYXRpdmVQYXRoXCI6IFwiXHU3QjE0XHU4QkIwL2luZGV4Lm1kXCIsXG4gICAgICBcImhhc2hlc1wiOiB7XG4gICAgICAgIFwic2hhMjU2XCI6IHtcbiAgICAgICAgICBcImNvbnRlbnRcIjogXCJkM2NkMWM5NThhMzY5ZWNjMDIwNTJmZDY5YzY0MTc3NTc3ZWI3NTAwNTFiZjNhMTNjYmEwNmMzZTdlNDFkNWVjXCJcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAge1xuICAgICAgXCJyZWxhdGl2ZVBhdGhcIjogXCJcdTdCMTRcdThCQjAvXHUyNzBEXHVGRTBGIFx1NjU4N1x1Njg2M1x1NURFNVx1N0EwQi9BUEkgXHU2NTg3XHU2ODYzXHU3Q0ZCXHU3RURGLm1kXCIsXG4gICAgICBcImhhc2hlc1wiOiB7XG4gICAgICAgIFwic2hhMjU2XCI6IHtcbiAgICAgICAgICBcImNvbnRlbnRcIjogXCI4YTA1YWY1YjA3NGJmNDk2YTVlMmM1Njc3OWE3MTI5N2NhZjkxMmM3ZjQ3OTY0ODQxNWU5YzdhOTczMTBhNWU1XCJcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAge1xuICAgICAgXCJyZWxhdGl2ZVBhdGhcIjogXCJcdTdCMTRcdThCQjAvXHUyNzBEXHVGRTBGIFx1NjU4N1x1Njg2M1x1NURFNVx1N0EwQi9cdTU2RkVcdTg4NjhcdTUzNzNcdTRFRTNcdTc4MDFcdUZGMDhDYUNcdUZGMDlcdTU2RkVcdTg4NjhcdTdFRDhcdTUyMzYubWRcIixcbiAgICAgIFwiaGFzaGVzXCI6IHtcbiAgICAgICAgXCJzaGEyNTZcIjoge1xuICAgICAgICAgIFwiY29udGVudFwiOiBcImU3M2I5NDc2OTQ4MWM3NmNhMDNjZTNlZWNhMzEyN2Q4N2Y3NzFlYjNmMDk1MmIzNDgwOTZmYzk0YzllMmIwNjlcIlxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICB7XG4gICAgICBcInJlbGF0aXZlUGF0aFwiOiBcIlx1N0IxNFx1OEJCMC9cdTZGMTRcdTc5M0FcdTc2RUVcdTVGNTUxL1x1NjU4N1x1Njg2My1cdTRFMERcdTVFMjZcdThCQzRcdThCQkEubWRcIixcbiAgICAgIFwiaGFzaGVzXCI6IHtcbiAgICAgICAgXCJzaGEyNTZcIjoge1xuICAgICAgICAgIFwiY29udGVudFwiOiBcIjVkYTMyOTlhMTE0NWUxNGI5MWNlMjRhNDhlMjIxM2ZjYzQwMzMwYjc4MzlmZTFlZDkwMTYyOWU5NmEwOWRjMzNcIlxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICB7XG4gICAgICBcInJlbGF0aXZlUGF0aFwiOiBcIlx1N0IxNFx1OEJCMC9cdTZGMTRcdTc5M0FcdTc2RUVcdTVGNTUxL1x1NjU4N1x1Njg2My1cdTVFMjZcdThCQzRcdThCQkEubWRcIixcbiAgICAgIFwiaGFzaGVzXCI6IHtcbiAgICAgICAgXCJzaGEyNTZcIjoge1xuICAgICAgICAgIFwiY29udGVudFwiOiBcIjlmZTRmNTM4MzVhNTZiOTYyZTc4MzQ5MmJkZDBlNjQyNjMwYTJhY2ZkOTM4NTM5ZTIwYTA2YWUzNjFhYmJjOWNcIlxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICBdLFxuICBcInNpZGViYXJcIjogW1xuICAgIHtcbiAgICAgIFwiaW5kZXhcIjogXCJcdTI3MERcdUZFMEYgXHU2NTg3XHU2ODYzXHU1REU1XHU3QTBCXCIsXG4gICAgICBcInRleHRcIjogXCJcdTI3MERcdUZFMEYgXHU2NTg3XHU2ODYzXHU1REU1XHU3QTBCXCIsXG4gICAgICBcImNvbGxhcHNlZFwiOiB0cnVlLFxuICAgICAgXCJpdGVtc1wiOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBcImluZGV4XCI6IFwiQVBJIFx1NjU4N1x1Njg2M1x1N0NGQlx1N0VERlwiLFxuICAgICAgICAgIFwidGV4dFwiOiBcIkFQSSBcdTY1ODdcdTY4NjNcdTdDRkJcdTdFREZcIixcbiAgICAgICAgICBcImxpbmtcIjogXCIvXHU3QjE0XHU4QkIwL1x1MjcwRFx1RkUwRiBcdTY1ODdcdTY4NjNcdTVERTVcdTdBMEIvQVBJIFx1NjU4N1x1Njg2M1x1N0NGQlx1N0VERlwiLFxuICAgICAgICAgIFwibGFzdFVwZGF0ZWRcIjogMTc1NjI1NTQ0NjAwMFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgXCJpbmRleFwiOiBcIlx1NTZGRVx1ODg2OFx1NTM3M1x1NEVFM1x1NzgwMVx1RkYwOENhQ1x1RkYwOVx1NTZGRVx1ODg2OFx1N0VEOFx1NTIzNlwiLFxuICAgICAgICAgIFwidGV4dFwiOiBcIlx1NTZGRVx1ODg2OFx1NTM3M1x1NEVFM1x1NzgwMVx1RkYwOENhQ1x1RkYwOVx1NTZGRVx1ODg2OFx1N0VEOFx1NTIzNlwiLFxuICAgICAgICAgIFwibGlua1wiOiBcIi9cdTdCMTRcdThCQjAvXHUyNzBEXHVGRTBGIFx1NjU4N1x1Njg2M1x1NURFNVx1N0EwQi9cdTU2RkVcdTg4NjhcdTUzNzNcdTRFRTNcdTc4MDFcdUZGMDhDYUNcdUZGMDlcdTU2RkVcdTg4NjhcdTdFRDhcdTUyMzZcIixcbiAgICAgICAgICBcImxhc3RVcGRhdGVkXCI6IDE3NTYyNTU0NDYwMDBcbiAgICAgICAgfVxuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgXCJpbmRleFwiOiBcIlx1NkYxNFx1NzkzQVx1NzZFRVx1NUY1NTFcIixcbiAgICAgIFwidGV4dFwiOiBcIlx1NkYxNFx1NzkzQVx1NzZFRVx1NUY1NTFcIixcbiAgICAgIFwiY29sbGFwc2VkXCI6IHRydWUsXG4gICAgICBcIml0ZW1zXCI6IFtcbiAgICAgICAge1xuICAgICAgICAgIFwiaW5kZXhcIjogXCJcdTY1ODdcdTY4NjMtXHU0RTBEXHU1RTI2XHU4QkM0XHU4QkJBXCIsXG4gICAgICAgICAgXCJ0ZXh0XCI6IFwiXHU2NTg3XHU2ODYzLVx1NEUwRFx1NUUyNlx1OEJDNFx1OEJCQVwiLFxuICAgICAgICAgIFwibGlua1wiOiBcIi9cdTdCMTRcdThCQjAvXHU2RjE0XHU3OTNBXHU3NkVFXHU1RjU1MS9cdTY1ODdcdTY4NjMtXHU0RTBEXHU1RTI2XHU4QkM0XHU4QkJBXCIsXG4gICAgICAgICAgXCJsYXN0VXBkYXRlZFwiOiAxNzU2MjU1NDQ2MDAwXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBcImluZGV4XCI6IFwiXHU2NTg3XHU2ODYzLVx1NUUyNlx1OEJDNFx1OEJCQVwiLFxuICAgICAgICAgIFwidGV4dFwiOiBcIlx1NjU4N1x1Njg2My1cdTVFMjZcdThCQzRcdThCQkFcIixcbiAgICAgICAgICBcImxpbmtcIjogXCIvXHU3QjE0XHU4QkIwL1x1NkYxNFx1NzkzQVx1NzZFRVx1NUY1NTEvXHU2NTg3XHU2ODYzLVx1NUUyNlx1OEJDNFx1OEJCQVwiLFxuICAgICAgICAgIFwibGFzdFVwZGF0ZWRcIjogMTc1NjI1NTQ0NjAwMFxuICAgICAgICB9XG4gICAgICBdXG4gICAgfVxuICBdLFxuICBcInRhZ3NcIjogW1xuICAgIHtcbiAgICAgIFwibmFtZVwiOiBcIlx1NzdFNVx1OEJDNlx1OTg4Nlx1NTdERi9cdTY1ODdcdTY4NjNcdTVERTVcdTdBMEJcIixcbiAgICAgIFwiYWxpYXNcIjogW10sXG4gICAgICBcImFwcGVhcmVkSW5Eb2NzXCI6IFtcbiAgICAgICAgXCJcdTdCMTRcdThCQjAvXHUyNzBEXHVGRTBGIFx1NjU4N1x1Njg2M1x1NURFNVx1N0EwQi9cdTU2RkVcdTg4NjhcdTUzNzNcdTRFRTNcdTc4MDFcdUZGMDhDYUNcdUZGMDlcdTU2RkVcdTg4NjhcdTdFRDhcdTUyMzYubWRcIlxuICAgICAgXSxcbiAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJcIixcbiAgICAgIFwiY291bnRcIjogMVxuICAgIH0sXG4gICAge1xuICAgICAgXCJuYW1lXCI6IFwiXHU2ODA3XHU3QjdFXHU1MTg1XHU1QkI5XCIsXG4gICAgICBcImFsaWFzXCI6IFtdLFxuICAgICAgXCJhcHBlYXJlZEluRG9jc1wiOiBbXG4gICAgICAgIFwiXHU3QjE0XHU4QkIwL1x1NkYxNFx1NzkzQVx1NzZFRVx1NUY1NTEvXHU2NTg3XHU2ODYzLVx1NEUwRFx1NUUyNlx1OEJDNFx1OEJCQS5tZFwiXG4gICAgICBdLFxuICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIlwiLFxuICAgICAgXCJjb3VudFwiOiAxXG4gICAgfVxuICBdXG59XG4iXSwKICAibWFwcGluZ3MiOiAiO0FBQWdTLE9BQU8sYUFBYTtBQUNwVCxTQUFTLG9CQUFvQjtBQUM3QixPQUFPLHdCQUF3QjtBQUMvQixPQUFPLHdCQUF3QjtBQUUvQixTQUFTLDBCQUEwQjtBQUNuQyxTQUFTLHlDQUF5QztBQUNsRCxTQUFTLHVDQUF1QztBQUNoRCxTQUFTLG9CQUFvQjs7O0FDTnRCLElBQU0sV0FBVztBQUdqQixJQUFNLGtCQUFrQjtBQU14QixJQUFNLGlCQUFpQjtBQUV2QixJQUFNLGNBQWM7QUFHcEIsSUFBTSxvQkFBb0I7QUFFMUIsSUFBTSxlQUFlLFdBQVcsaUJBQWlCOzs7QUNBeEQsSUFBTSxlQUFlLENBQUMsU0FBaUIsc0JBQXNCLElBQUk7QUFFMUQsSUFBTSxXQUFzQjtBQUFBLEVBQ2pDO0FBQUEsSUFDRSxNQUFNO0FBQUEsSUFDTixRQUFRO0FBQUEsSUFDUixVQUFVO0FBQUEsSUFDVixPQUFPO0FBQUEsSUFDUCxNQUFNO0FBQUEsSUFDTixPQUFPO0FBQUEsTUFDTCxFQUFFLE1BQU0sVUFBVSxNQUFNLFVBQVUsTUFBTSxrQ0FBa0M7QUFBQSxNQUMxRSxFQUFFLE1BQU0sV0FBVyxNQUFNLFdBQVcsTUFBTSxnQ0FBZ0M7QUFBQSxJQUM1RTtBQUFBLElBQ0EsYUFBYSxDQUFDLGNBQWMsc0JBQU8sc0JBQU8sY0FBYyxZQUFZO0FBQUEsSUFDcEUsY0FBYyxDQUFDLGdCQUFnQjtBQUFBLEVBQ2pDO0FBQUEsRUFDQTtBQUFBLElBQ0UsTUFBTTtBQUFBLElBQ04sUUFBUTtBQUFBLElBQ1IsVUFBVTtBQUFBLElBQ1YsT0FBTztBQUFBLElB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
