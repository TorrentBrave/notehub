import{_ as p,c as d,I as a,a as s,e,w as l,ay as i,E as r,o as k}from"./chunks/framework.D_vve9w4.js";const Ve=JSON.parse('{"title":"📒 笔记","description":"","frontmatter":{},"headers":[],"relativePath":"笔记/index.md","filePath":"笔记/index.md"}'),_={name:"笔记/index.md"},c=s("h1",{id:"📒-笔记",tabindex:"-1"},[e("📒 笔记 "),s("a",{class:"header-anchor",href:"#📒-笔记","aria-label":'Permalink to "📒 笔记"'},"​")],-1),u=s("h2",{id:"bohao-chen的知识库",tabindex:"-1"},[e("BoHao Chen的知识库 "),s("a",{class:"header-anchor",href:"#bohao-chen的知识库","aria-label":'Permalink to "BoHao Chen的知识库"'},"​")],-1),g=s("h2",{id:"想要自己部署和在本地启动强大的-bohao-chen-知识库-或者自己拥有一份",tabindex:"-1"},[e("想要自己部署和在本地启动强大的 BoHao Chen 知识库，或者自己拥有一份？ "),s("a",{class:"header-anchor",href:"#想要自己部署和在本地启动强大的-bohao-chen-知识库-或者自己拥有一份","aria-label":'Permalink to "想要自己部署和在本地启动强大的 BoHao Chen 知识库，或者自己拥有一份？"'},"​")],-1),b=s("h3",{id:"背景介绍",tabindex:"-1"},[e("背景介绍 "),s("a",{class:"header-anchor",href:"#背景介绍","aria-label":'Permalink to "背景介绍"'},"​")],-1),f=s("p",null,"在继续之前，也请容许我介绍一下对项目所使用的技术和架构。",-1),m={id:"等等-这和-obsidian-publish-有什么不同",tabindex:"-1"},C=s("a",{class:"header-anchor",href:"#等等-这和-obsidian-publish-有什么不同","aria-label":'Permalink to "等等，这和 [Obsidian Publish](https://obsidian.md/publish) 有什么不同"'},"​",-1),v={id:"为什么不用-obsidian-publish",tabindex:"-1"},y=s("a",{class:"header-anchor",href:"#为什么不用-obsidian-publish","aria-label":'Permalink to "为什么不用 [Obsidian Publish](https://obsidian.md/publish)"'},"​",-1),A={id:"在什么情况下你应该使用-obsidian-publish",tabindex:"-1"},F=s("a",{class:"header-anchor",href:"#在什么情况下你应该使用-obsidian-publish","aria-label":'Permalink to "在什么情况下你应该使用 [Obsidian Publish](https://obsidian.md/publish)"'},"​",-1),T={id:"所以-也有别人在这样使用-vitepress-作为可部署的知识库吗",tabindex:"-1"},P=s("a",{class:"header-anchor",href:"#所以-也有别人在这样使用-vitepress-作为可部署的知识库吗","aria-label":'Permalink to "所以，也有别人在这样使用 [VitePress](https://vitepress.dev) 作为可部署的知识库吗？"'},"​",-1),B=s("p",null,"哦，当然！",-1),w=s("h3",{id:"如何下载到本地",tabindex:"-1"},[e("如何下载到本地 "),s("a",{class:"header-anchor",href:"#如何下载到本地","aria-label":'Permalink to "如何下载到本地"'},"​")],-1),S=s("p",null,"废话不多说，我们开始下载的步骤吧。",-1),E=s("code",null,"nolebase",-1),V=i('<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> https://github.com/TorrentBrave</span></span></code></pre></div><h4 id="使用的是-windows-吗" tabindex="-1">使用的是 Windows 吗 <a class="header-anchor" href="#使用的是-windows-吗" aria-label="Permalink to &quot;使用的是 Windows 吗&quot;">​</a></h4>',2),x={class:"warning custom-block github-alert"},N=s("p",{class:"custom-block-title"},"注意",-1),I=i(`<div class="language-PowerShell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">PowerShell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">PS D:\\</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> git clone https:</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">//</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">github.com</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">TorrentBrave</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">error: invalid path </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;x: xxx.md&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">fatal: unable to checkout working tree</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">warning: Clone succeeded</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> but checkout failed.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">You can inspect what was checked out with </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;git status&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">and retry with </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;git restore --source=HEAD :/&#39;</span></span></code></pre></div>`,1),H=i('<p>你可以在命令行窗口中输入下面的命令来解决这个问题：</p><div class="language-PowerShell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">PowerShell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">git config </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">global core.protectNTFS false</span></span></code></pre></div>',2),D=s("h3",{id:"如何使用、运行或者部署",tabindex:"-1"},[e("如何使用、运行或者部署 "),s("a",{class:"header-anchor",href:"#如何使用、运行或者部署","aria-label":'Permalink to "如何使用、运行或者部署"'},"​")],-1),O=s("p",null,"完成了下载了吗？很好，恭喜你已经完成了很艰难的一步！",-1),j=s("p",null,"正如先前介绍过",-1),R=s("h4",{id:"准备工作",tabindex:"-1"},[e("准备工作 "),s("a",{class:"header-anchor",href:"#准备工作","aria-label":'Permalink to "准备工作"'},"​")],-1),G=s("p",null,"所以你在继续下面的步骤之前，需要完成另外的两件事情：",-1),q=s("code",null,"node --version",-1),L=s("code",null,"npm --version",-1),W=s("code",null,"pnpm --version",-1),M=s("h5",{id:"使用的是-windows-吗-1",tabindex:"-1"},[e("使用的是 Windows 吗 "),s("a",{class:"header-anchor",href:"#使用的是-windows-吗-1","aria-label":'Permalink to "使用的是 Windows 吗"'},"​")],-1),z={class:"warning custom-block github-alert"},Q=s("p",{class:"custom-block-title"},"注意",-1),$=s("p",null,null,-1),J=s("code",null,"scoop",-1),Y=i('<p>想要快速安装 Scoop，使用 <kbd data-windows-keyboard-key="windows">Win</kbd> + <kbd>Q</kbd> 打开搜索，键入「Powershell」之后点击搜索结果中的蓝色方块，然后输入下面的命令：</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">Set-ExecutionPolicy</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">ExecutionPolicy RemoteSigned </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">Scope CurrentUser</span></span></code></pre></div><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">Invoke-RestMethod</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">Uri https:</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">//</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">get.scoop.sh </span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> Invoke-Expression</span></span></code></pre></div>',3),U=i('<p>使用 <kbd data-windows-keyboard-key="windows">Win</kbd> + <kbd>Q</kbd> 打开搜索，键入「Powershell」之后点击搜索结果中的蓝色方块，然后输入下面的命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --version</span></span></code></pre></div>',2),K=s("code",null,"vxx.xx.xx",-1),X=s("code",null,"v21.1.0",-1),Z=s("code",null,"scoop",-1),ee=i('<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">scoop</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> nodejs</span></span></code></pre></div><div class="warning custom-block github-alert"><p class="custom-block-title">注意</p><p></p><p>由于我们使用到了 <code>sharp</code> 这个依赖来生成图片，而 <code>sharp</code> 依赖需要使用到 Python，因此你也需要安装 Python。</p><p>如果采用了上面提到的 <code>scoop</code>，可以使用下面的命令来安装 Python：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">scoop</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> python</span></span></code></pre></div></div>',2),se=i('<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">corepack</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> enable</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">corepack</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> prepare</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> pnpm@latest</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --activate</span></span></code></pre></div><p>首次安装完成之后需要运行一下</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> setup</span></span></code></pre></div>',4),ae=i('<p>差不多准备好啦，让我们前往 BoHao Chen 知识库所在的目录吧，使用下面的命令来前往 BoHao Chen 知识库所在的目录：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">cd</span></span></code></pre></div><p>先多输入一个空格，然后接下来打开文件管理器，把你解压缩完成的 BoHao Chen 知识库文件夹拖拽到运行窗口中，最后按下 <kbd data-keyboard-key="enter">回车</kbd> 键，就可以告诉 Powershell 前往 BoHao Chen 知识库所在的目录了。</p><h5 id="使用的是-macos-吗" tabindex="-1">使用的是 macOS 吗 <a class="header-anchor" href="#使用的是-macos-吗" aria-label="Permalink to &quot;使用的是 macOS 吗&quot;">​</a></h5>',4),te={class:"warning custom-block github-alert"},le=s("p",{class:"custom-block-title"},"注意",-1),ie=s("p",null,null,-1),re=s("code",null,"Homebrew",-1),ne=i('<p>想要快速安装 Homebrew，使用 <kbd data-macos-keyboard-key="command">command</kbd> + <kbd data-keyboard-key="space">空格</kbd> 打开「终端」应用，然后输入下面的命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">/bin/bash</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;</span></span></code></pre></div>',2),oe=i('<p>使用 <kbd data-macos-keyboard-key="command">command</kbd> + <kbd data-keyboard-key="space">空格</kbd> 打开「终端」应用，然后输入下面的命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --version</span></span></code></pre></div>',2),he=s("code",null,"vxx.xx.xx",-1),pe=s("code",null,"v21.1.0",-1),de=s("code",null,"Homebrew",-1),ke=i('<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> node</span></span></code></pre></div>',1),_e=i('<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">corepack</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> enable</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">corepack</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> prepare</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> pnpm@latest</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --activate</span></span></code></pre></div><p>首次安装完成之后需要运行一下</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> setup</span></span></code></pre></div>',4),ce=i('<p>差不多准备好啦，让我们前往 BoHao Chen 知识库所在的目录吧，使用下面的命令来前往 BoHao Chen 知识库所在的目录：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">cd</span></span></code></pre></div><p>先多输入一个空格，然后接下来打开访达，把你解压缩完成的 BoHao Chen 知识库文件夹拖拽到终端窗口中，最后按下 <kbd data-keyboard-key="return">return</kbd> 键，就可以告诉终端前往 BoHao Chen 知识库所在的目录了。</p><h5 id="使用的是-linux-吗" tabindex="-1">使用的是 Linux 吗 <a class="header-anchor" href="#使用的是-linux-吗" aria-label="Permalink to &quot;使用的是 Linux 吗&quot;">​</a></h5><p>你既然已经在使用 Linux 了，应该知道怎么做了吧？</p><h4 id="安装依赖和运行开发服务器" tabindex="-1">安装依赖和运行开发服务器 <a class="header-anchor" href="#安装依赖和运行开发服务器" aria-label="Permalink to &quot;安装依赖和运行开发服务器&quot;">​</a></h4>',6),ue=s("code",null,"node_modules",-1),ge=i('<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> install</span></span></code></pre></div>',1),be=i(`<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> docs:dev</span></span></code></pre></div><p>就像这样</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> docs:dev</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  vitepress</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> v1.0.0-rc.20</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  ➜</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  Local:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">   http://localhost:5173/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  ➜</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  Network:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> use</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --host</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> expose</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  ➜</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  press</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> h</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> show</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> help</span></span></code></pre></div>`,3),fe=i('<p>在这个本地运行的 BoHao Chen 知识库前端服务器启动的情况下，你针对所有 Markdown 文件、样式文件、配置文件的变更，都会实时响应到网页中。</p><p>如果刷新不及时或者更新有异常，也可以试试看使用 <kbd data-macos-keyboard-key="command">command</kbd> + <kbd>R</kbd> （macOS 系统） <kbd>Ctrl</kbd> + <kbd>R</kbd> （Windows 和 Linux 系统）快捷键强制刷新。</p><h4 id="构建并渲染为可部署的静态页面" tabindex="-1">构建并渲染为可部署的静态页面 <a class="header-anchor" href="#构建并渲染为可部署的静态页面" aria-label="Permalink to &quot;构建并渲染为可部署的静态页面&quot;">​</a></h4>',3),me=i('<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> docs:build</span></span></code></pre></div><p>构建完成后，渲染出来的 HTML 和各种资源将会被存储在 <code>.vitepress/dist</code> 目录下面，你可以通过上传 <code>.vitepress/dist</code> 目录来完成 BoHao Chen 知识库的部署。</p><h4 id="使用静态网站托管服务部署页面" tabindex="-1">使用静态网站托管服务部署页面 <a class="header-anchor" href="#使用静态网站托管服务部署页面" aria-label="Permalink to &quot;使用静态网站托管服务部署页面&quot;">​</a></h4><p>BoHao Chen 知识库使用 VitePress 静态生成器来驱动和生成静态页面，因此可以部署到下列已知的优质<strong>静态网站托管服务</strong>：</p>',4),Ce=s("div",{class:"note custom-block github-alert"},[s("p",{class:"custom-block-title"},"NOTE"),s("p",null,[e("与自建单独的虚拟机并使用类似于 Nginx，或者对象存储（OSS）相比，使用上述提及的静态网站托管服务时，"),s("strong",null,"可以省略手动部署流程"),e("，也"),s("strong",null,"无需花费时间与精力维护单独的网站服务器"),e("。")]),s("p",null,"让我们把精力放在写作上吧！❤️")],-1),ve=s("h2",{id:"贡献者",tabindex:"-1"},[e("贡献者 "),s("a",{class:"header-anchor",href:"#贡献者","aria-label":'Permalink to "贡献者"'},"​")],-1),ye=s("h2",{id:"文件历史",tabindex:"-1"},[e("文件历史 "),s("a",{class:"header-anchor",href:"#文件历史","aria-label":'Permalink to "文件历史"'},"​")],-1);function Ae(Fe,Te,Pe,Be,we,Se){const n=r("NolebasePageProperties"),t=r("VPNolebaseInlineLinkPreview"),o=r("NolebaseGitContributors"),h=r("NolebaseGitChangelog");return k(),d("div",null,[c,a(n),u,s("p",null,[e("欢迎来到知识库 "),a(t,{href:"https://nolebase.ayaka.io",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("BoHao Chen")]),_:1}),e("，这里是 📒 笔记分区")]),g,s("p",null,[e("很高兴你对 "),a(t,{href:"https://nolebase.ayaka.io",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("BoHao Chen")]),_:1}),e(" 感兴趣！")]),b,s("p",null,[e("首先 "),a(t,{href:"https://nolebase.ayaka.io",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("BoHao Chen")]),_:1}),e(" 是完全可以在本地无网络环境的情况下使用的！你可以在跟随"),a(t,{href:"#如何下载到本地"},{default:l(()=>[e("如何下载到本地")]),_:1}),e("的指引下载或者克隆之后使用 "),a(t,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian")]),_:1}),e(" 和 "),a(t,{href:"https://logseq.com/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Logseq")]),_:1}),e(" 这样的知识库软件打开，也可以用 "),a(t,{href:"https://typora.io/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Typora")]),_:1}),e(" 这样的 Markdown 编辑器打开进行浏览和编辑，这意味着即便你不具备任何的编程技能，也可以使用或者借鉴我们的知识库分类和组织方法。")]),f,s("p",null,[e("和其他的由 "),a(t,{href:"https://hexo.io",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Hexo")]),_:1}),e(" 驱动和生成的博客和静态网站类似，"),a(t,{href:"https://nolebase.ayaka.io",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("BoHao Chen")]),_:1}),e(" 其实使用了名为 "),a(t,{href:"https://vitepress.dev",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("VitePress")]),_:1}),e(" 的静态生成器来驱动和生成网站，像 "),a(t,{href:"https://vitepress.dev",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("VitePress")]),_:1}),e(" 这样的静态生成器支持在 Markdown 文件中使用 "),a(t,{href:"https://vuejs.org/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Vue")]),_:1}),e(" 组件来嵌入并增强文档的阅读和使用体验。而 "),a(t,{href:"https://vitepress.dev",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("VitePress")]),_:1}),e(" 和 "),a(t,{href:"https://vuejs.org/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Vue")]),_:1}),e(" 是 "),a(t,{href:"https://nodejs.org/en",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Node.js")]),_:1}),e(" 生态的一部分，他们都属于「前端技术」的一部分。")]),s("p",null,[e("在运行和部署上，我们使用免费的 "),a(t,{href:"https://www.netlify.com/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Netlify")]),_:1}),e(" 来提供网站的托管，使用 "),a(t,{href:"https://github.com/features/actions",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("GitHub Actions")]),_:1}),e("（你可以理解一个将会在每次我们将笔记和知识库内容更新到 GitHub 仓库之后会自动触发的一个自动化工作）把我们的笔记和知识库内容自动构建和部署到 "),a(t,{href:"https://www.netlify.com/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Netlify")]),_:1}),e(" 上。")]),s("h3",m,[e("等等，这和 "),a(t,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian Publish")]),_:1}),e(" 有什么不同 "),C]),s("p",null,[e("好问题，作为 "),a(t,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian")]),_:1}),e(" 的用户，你可能会知道他们开发团队提供了一套专门用于发布 "),a(t,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian")]),_:1}),e(" 中的笔记的服务「"),a(t,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian Publish")]),_:1}),e("」，如果你不知道也不要紧，可以把 "),a(t,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian Publish")]),_:1}),e(" 理解为一个可以帮助你将 "),a(t,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian")]),_:1}),e(" 中的笔记发布到互联网上帮助你分享和提供搜索引擎优化（SEO）的服务。")]),s("h4",v,[e("为什么不用 "),a(t,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian Publish")]),_:1}),e(),y]),s("ol",null,[s("li",null,[a(t,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian Publish")]),_:1}),e(" 需要付费才能使用，但是实际上对于静态网站而言，就像先前介绍的那样，我们可以白嫖一些像是 "),a(t,{href:"https://pages.github.com/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("GitHub Pages")]),_:1}),e("，"),a(t,{href:"https://www.netlify.com/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Netlify")]),_:1}),e("，"),a(t,{href:"https://vercel.com/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Vercel")]),_:1}),e(" 和 "),a(t,{href:"https://pages.cloudflare.com/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Cloudflare Pages")]),_:1}),e(" 这样现成的基础设施帮忙托管；")]),s("li",null,[a(t,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian Publish")]),_:1}),e(" 部署后的静态页面是没有 "),a(t,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian")]),_:1}),e(" 自带的插件功能的支持的，这意味着很多作者（或者你）在本地撰写好的使用了插件支持的语法的文档在本地使用 "),a(t,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian")]),_:1}),e(" 渲染和预览的时候是能正常工作的，然而将会在 "),a(t,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian Publish")]),_:1}),e(" 部署和托管后变得不可用。这是非常关键的一个问题，很多用户（包括我在内）都非常依赖于 "),a(t,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian")]),_:1}),e(" 的插件生态，这样的问题现在还没有足够好的解决方案，但我们创建了名为 "),a(t,{href:"https://github.com/TorrentBrave/integrations",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("BoHao Chen 集成")]),_:1}),e(" 这样的项目来尝试提供一些常见的和常用的 "),a(t,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian")]),_:1}),e(" 插件在 "),a(t,{href:"https://vitepress.dev",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("VitePress")]),_:1}),e(" 和 "),a(t,{href:"https://vuejs.org/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Vue")]),_:1}),e(" 的环境下的替代方案，这样的替代方案虽然不能完全替代 "),a(t,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian")]),_:1}),e(" 插件的功能，但是可以在一定程度上提供类似的功能，你也可以关注一下；")])]),s("h4",A,[e("在什么情况下你应该使用 "),a(t,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian Publish")]),_:1}),e(),F]),s("p",null,[a(t,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian Publish")]),_:1}),e(" 也有它自己的优点：")]),s("ol",null,[s("li",null,[e("寻找适合 "),a(t,{href:"https://vitepress.dev",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("VitePress")]),_:1}),e(" 的 Markdown 插件是困难和复杂的，"),a(t,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian Publish")]),_:1}),e(" 天然支持所有 "),a(t,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian")]),_:1}),e(" 原生支持的语法和插件，这意味着你不需要额外的调研和试错工作就可以将你在本地使用 "),a(t,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian")]),_:1}),e(" 撰写的文档直接部署到互联网上；")]),s("li",null,[e("运行和部署像是 "),a(t,{href:"https://nolebase.ayaka.io",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("BoHao Chen")]),_:1}),e(" 这样的静态网站对于不具备任何的代码和编程知识的作者难度大得多，但是 "),a(t,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian Publish")]),_:1}),e(" 不需要任何的代码和编程知识，也无需关心任何的技术细节，和 Notion 的分享一样，你只需要点击几下就可以完成部署；")])]),s("p",null,[e("所以如果你没有掌握必备的编程技能，或者你不想花时间和精力去学习和掌握这些技能，那么 "),a(t,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Obsidian Publish")]),_:1}),e(" 可能是一个更好的选择。")]),s("h3",T,[e("所以，也有别人在这样使用 "),a(t,{href:"https://vitepress.dev",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("VitePress")]),_:1}),e(" 作为可部署的知识库吗？ "),P]),B,s("p",null,[e("这里有一些我们在 GitHub 上发现的使用 "),a(t,{href:"https://vitepress.dev",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("VitePress")]),_:1}),e(" 作为知识库的项目：")]),s("ul",null,[s("li",null,[a(t,{href:"https://github.com/Charles7c/charles7c.github.io",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Charles7c/charles7c.github.io：基于 VitePress 构建的个人知识库/博客。")]),_:1})]),s("li",null,[a(t,{href:"https://github.com/Lercel/Vision",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Lercel/Vision")]),_:1})]),s("li",null,[a(t,{href:"https://github.com/maomao1996/mm-notes",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("maomao1996/mm-notes: 茂茂物语: 各种笔记记录（想到啥写啥系列）")]),_:1})]),s("li",null,[a(t,{href:"https://github.com/ATQQ/sugar-blog",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("ATQQ/sugar-blog: ✍️📚我写博客的地方🤪🤪🤪记录随笔与学习笔记")]),_:1})]),s("li",null,[a(t,{href:"https://github.com/chodocs/chodocs",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("chodocs/chodocs: 一站式前端内容网站，包括学习路线、知识体系。")]),_:1})]),s("li",null,[a(t,{href:"https://github.com/cangzihan/knolls-think-tank",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("cangzihan/knolls-think-tank: 基于BoHao Chen的个人知识库")]),_:1})]),s("li",null,[a(t,{href:"https://github.com/CHENJIAMIAN/Blog",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("CHENJIAMIAN/Blog: Obsidian笔记库 | 我的笔记分bei享fen | 根据GitHub工作流自动构建vitepress博客 | http://chenjiamian.me/Blog/")]),_:1})]),s("li",null,[a(t,{href:"https://github.com/realzhengyiming/YiMingBlog",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("realzhengyiming/YiMingBlog: a... new blog again, hhhh")]),_:1})]),s("li",null,[a(t,{href:"https://github.com/nikitavoloboev/knowledge?tab=readme-ov-file",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("nikitavoloboev/knowledge: Everything I know")]),_:1})]),s("li",null,[a(t,{href:"https://github.com/senup/wiki?tab=readme-ov-file",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("senup/wiki: wiki")]),_:1})]),s("li",null,[a(t,{href:"https://github.com/kkoscielniak/digital-garden",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("kkoscielniak/digital-garden: 🥦 Things I know")]),_:1})]),s("li",null,[a(t,{href:"https://github.com/Merlin-Chest/Blog",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Merlin-Chest/Blog: 个人学习及知识记录整理")]),_:1})]),s("li",null,[a(t,{href:"https://github.com/selwynpolit/d9book",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("selwynpolit/d9book: Drupal at your Fingertips: A developers quick reference for Drupal 9 and 10")]),_:1})]),s("li",null,[a(t,{href:"https://github.com/vlad196/ALTRegularGnomeWiki",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("vlad196/ALTRegularGnomeWiki: открытое сообщество пользователей операционной системы ALT Regular Gnome")]),_:1})]),s("li",null,[a(t,{href:"https://github.com/shalotts/shalodoc",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("shalotts/shalodoc")]),_:1})]),s("li",null,[a(t,{href:"https://github.com/vdriasworld/manual",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("vdriasworld/manual: Vdrias World! 游玩指南")]),_:1})]),s("li",null,[a(t,{href:"https://github.com/LittleSkinCommspt/manual-ng",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("LittleSkinCommspt/manual-ng: under dev")]),_:1})])]),w,S,s("p",null,[e("如果你没有熟练掌握诸如命令行和 "),a(t,{href:"https://git-scm.com/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Git")]),_:1}),e(" 的使用，我们在这里建议你使用 "),a(t,{href:"https://github.com",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("GitHub")]),_:1}),e(" 本身提供的 "),a(t,{href:"https://docs.github.com/zh/repositories/working-with-files/using-files/downloading-source-code-archives",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("下载源代码存档")]),_:1}),e(" 功能直接从 "),a(t,{href:"https://github.com",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("GitHub")]),_:1}),e(" 站点上下载打包好的压缩文件包，然后到本地解压后查看和使用。")]),s("p",null,[e("如果你掌握了命令行和 "),a(t,{href:"https://git-scm.com/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Git")]),_:1}),e(" 的使用，可以通过下面的命令克隆项目仓库到名为 "),E,e(" 的目录中：")]),V,s("div",x,[N,s("p",null,[e("如果你使用的是 "),a(t,{href:"https://gitforwindows.org/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Git for Windows")]),_:1}),e(" ，那么可能会在执行上述命令时，遇到类似这样的报错：")]),I,s("p",null,[e("这是 "),a(t,{href:"https://gitforwindows.org/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Git for Windows")]),_:1}),e(" 的默认配置导致的"),a(t,{href:"https://github.com/git-for-windows/git/issues/2777",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("问题")]),_:1}),e("。")]),H]),D,O,j,s("blockquote",null,[s("p",null,[a(t,{href:"https://nolebase.ayaka.io",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("BoHao Chen")]),_:1}),e(" 其实使用了名为 "),a(t,{href:"https://vitepress.dev",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("VitePress")]),_:1}),e(" 的静态生成器来驱动和生成网站。")]),s("p",null,[e("而 "),a(t,{href:"https://vitepress.dev",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("VitePress")]),_:1}),e(" 和 "),a(t,{href:"https://vuejs.org/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Vue")]),_:1}),e(" 是 "),a(t,{href:"https://nodejs.org/en",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Node.js")]),_:1}),e(" 生态的一部分，他们都属于「前端技术」的一部分。")])]),s("p",null,[e("因此你需要先配置一下 "),a(t,{href:"https://nodejs.org/en",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Node.js")]),_:1}),e(" 和添加和管理 "),a(t,{href:"https://vitepress.dev",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("VitePress")]),_:1}),e(" 和 "),a(t,{href:"https://vuejs.org/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Vue")]),_:1}),e(" 作为底层管理依赖的工具 "),a(t,{href:"https://pnpm.io/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("pnpm")]),_:1}),e(" 。")]),R,G,s("ol",null,[s("li",null,[e("安装和配置 "),a(t,{href:"https://nodejs.org/en",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Node.js")]),_:1}),e("，要校验 Node.js 是否安装成功，可以通过打开命令行窗口然后运行 "),q,e(" 和 "),L,e(" 来查看是否会报错；")]),s("li",null,[e("安装和配置 "),a(t,{href:"https://pnpm.io/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("pnpm")]),_:1}),e("，要校验 pnpm 是否安装成功，可以通过打开命令行窗口然后运行 "),W,e("。")])]),M,s("div",z,[Q,$,s("p",null,[e("如果你使用的是 Windows，可以选择通过 "),a(t,{href:"https://scoop.sh/",target:"_blank",rel:"noreferrer"},{default:l(()=>[J]),_:1}),e("（一款在 Windows 上面向开发者可用的包管理器）来安装这些必要的工具，这样可以避免在 Windows 上面安装和配置这些工具的时候遇到的一些问题。")]),Y]),U,s("p",null,[e("如果你看到了类似于 "),K,e(" 的版本号（比如 "),X,e("），那么恭喜你，你已经成功安装了 "),a(t,{href:"https://nodejs.org/en",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Node.js")]),_:1}),e("。")]),s("p",null,[e("如果没有看到，那么你需要先安装 "),a(t,{href:"https://nodejs.org/en",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Node.js")]),_:1}),e("。如果采用了上面提到的 "),Z,e("，可以使用下面的命令来安装 "),a(t,{href:"https://nodejs.org/en",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Node.js")]),_:1}),e("：")]),ee,s("p",null,[e("接下来让我们来安装 "),a(t,{href:"https://pnpm.io/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("pnpm")]),_:1}),e("，使用下面的命令来安装 "),a(t,{href:"https://pnpm.io/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("pnpm")]),_:1}),e("：")]),se,s("p",null,[e("来配置 "),a(t,{href:"https://pnpm.io/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("pnpm")]),_:1}),e(" 所需要的目录，完成之后需要关掉当前的 Powershell 窗口，然后重新打开一个新的 Powershell 窗口。")]),ae,s("div",te,[le,ie,s("p",null,[e("如果你使用的是 macOS，可以选择通过 "),a(t,{href:"https://brew.sh/",target:"_blank",rel:"noreferrer"},{default:l(()=>[re]),_:1}),e("（一款在 macOS 上面向开发者可用的包管理器）来安装这些必要的工具，这样可以避免在 macOS 上面安装和配置这些工具的时候遇到的一些问题。")]),ne]),oe,s("p",null,[e("如果你看到了类似于 "),he,e(" 的版本号（比如 "),pe,e("），那么恭喜你，你已经成功安装了 "),a(t,{href:"https://nodejs.org/en",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Node.js")]),_:1}),e("。")]),s("p",null,[e("如果没有看到，那么你需要先安装 "),a(t,{href:"https://nodejs.org/en",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Node.js")]),_:1}),e("。如果采用了上面提到的 "),de,e("，可以使用下面的命令来安装 "),a(t,{href:"https://nodejs.org/en",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Node.js")]),_:1}),e("：")]),ke,s("p",null,[e("接下来让我们来安装 "),a(t,{href:"https://pnpm.io/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("pnpm")]),_:1}),e("，使用下面的命令来安装 "),a(t,{href:"https://pnpm.io/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("pnpm")]),_:1}),e("：")]),_e,s("p",null,[e("来配置 "),a(t,{href:"https://pnpm.io/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("pnpm")]),_:1}),e(" 所需要的目录，完成之后需要关掉当前的终端窗口，然后重新打开一个新的终端窗口。")]),ce,s("p",null,[e("在倒数第二步中，我们需要安装依赖，这样 "),a(t,{href:"https://vitepress.dev",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("VitePress")]),_:1}),e(" 和 "),a(t,{href:"https://vuejs.org/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Vue")]),_:1}),e(" 就会被下载到本地的 "),a(t,{href:"https://nolebase.ayaka.io",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("BoHao Chen")]),_:1}),e(" 目录/文件夹下的 "),ue,e(" 目录/文件夹下了：")]),ge,s("p",null,[e("接下来你可以直接运行下面的命令开启一个本地运行的 "),a(t,{href:"https://nolebase.ayaka.io",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("BoHao Chen")]),_:1}),e(" 知识库前端服务器，通常而言我们称之为「开发服务器」，用这个服务器，可以通过浏览器在本地直接访问渲染完成的页面：")]),be,s("p",null,[e("当你看到上面的字样的时候，就可以前往本地的 "),a(t,{href:"http://localhost:5173",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("http://localhost:5173")]),_:1}),e(" 查看渲染完成的页面了：")]),fe,s("p",null,[e("想要部署页面，首先先确保你已经执行过了"),a(t,{href:"#安装依赖和运行开发服务器"},{default:l(()=>[e("安装依赖和运行开发服务器")]),_:1}),e(" 的步骤，一般而言构建和渲染的时候可能遇到的问题都可以在运行开发服务器的时候发现，接下来你只需要一个简单的命令就能完成构建了：")]),me,s("ul",null,[s("li",null,[a(t,{href:"https://netlify.com/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Netlify")]),_:1})]),s("li",null,[a(t,{href:"https://vercel.com/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Vercel")]),_:1})]),s("li",null,[a(t,{href:"https://pages.cloudflare.com/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Cloudflare Pages")]),_:1})]),s("li",null,[a(t,{href:"https://aws.amazon.com/cn/amplify/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("AWS Amplify")]),_:1})]),s("li",null,[a(t,{href:"https://render.com/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Render")]),_:1})]),s("li",null,[a(t,{href:"https://pages.github.com/",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("GitHub Pages")]),_:1})]),s("li",null,[a(t,{href:"https://azure.microsoft.com/en-us/products/app-service/static",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("Azure Static Web")]),_:1})])]),Ce,s("p",null,[e("请参照 VitePress 官方文档的"),a(t,{href:"https://vitepress.dev/zh/guide/deploy",target:"_blank",rel:"noreferrer"},{default:l(()=>[e("部署 VitePress 站点")]),_:1}),e("页面文档所介绍的内容，通过主流的静态网站托管服务来部署自己的 BoHao Chen 知识库。")]),ve,a(o),ye,a(h)])}const xe=p(_,[["render",Ae]]);export{Ve as __pageData,xe as default};
